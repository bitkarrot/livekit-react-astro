---
import Layout from '~/layouts/LivekitLayout.astro';
import '~/assets/styles/livekit/LKglobals.css';

// Create a URL object from the request URL string
const url = new URL(Astro.request.url);
const searchParams = url.searchParams;
console.log('searchParams:', searchParams)
let roomName = searchParams.get('room') || '';

// If no room parameter is provided, redirect to the index page
if (!roomName || roomName === '') {
  return Astro.redirect('/');
}

---
<Layout title="Hivetalk Video Conference">
  <div class="min-h-screen flex flex-col items-center justify-center bg-gray-900 p-4">
    <div class="max-w-md w-full bg-gray-800 rounded-lg shadow-lg p-8">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-white mb-2">Join {roomName}</h1>
        <p class="text-gray-300"> on Hivetalk.org
        </p>
      </div>
      <div class="space-y-6">
        <button id="nostrlogin" class="w-full bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-4 rounded-lg transition duration-200">
          Login with Nostr
        </button>
        <div class="relative">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-gray-600"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-gray-800 text-gray-400">or</span>
          </div>
        </div>
        <div>
          <input hidden id="roomName" value=`${roomName}`>
          <label for="name" class="block text-sm font-medium text-gray-300 mb-2">Enter your Name</label>
          <div class="flex">
            <input type="text" id="name" class="flex-1 bg-gray-700 text-white rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter Your Name">
            <button id="join-meeting" class="bg-gray-600 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded-r-lg transition duration-200">
              Join
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script src="https://www.unpkg.com/nostr-login@latest/dist/unpkg.js"  data-perms="sign_event:1,sign_event:0" data-theme="default" data-dark-mode="true"></script>
<script src="https://unpkg.com/nostr-tools/lib/nostr.bundle.js"></script>

<script is:inline>

  document.addEventListener('DOMContentLoaded', () => {
    // Get the room name from the hidden input
    const roomNameInput = document.getElementById('roomName');
    const roomValue = roomNameInput instanceof HTMLInputElement ? roomNameInput.value : '';
    
    // Nostr login button
    const nostrLoginBtn = document.getElementById('nostrlogin');
    if (nostrLoginBtn) {
      nostrLoginBtn.addEventListener('click', () => {
        if (roomValue) {
          // The nostr auth flow will handle the cookie setting and 
          // when loadUser() is called after auth, it will redirect to the meet page
          console.log('Starting Nostr login for room:', roomValue);
          document.dispatchEvent(new CustomEvent('nlLaunch', { detail: 'welcome' }));
          loadUser(roomValue);
        } else {
          // If somehow no room, redirect to home
          window.location.href = '/';
        }
      });
    }

    // Join meeting button
    const joinMeetingBtn = document.getElementById('join-meeting');
    const usernameInput = document.getElementById('name');

    if (joinMeetingBtn && usernameInput && usernameInput instanceof HTMLInputElement) {
      joinMeetingBtn.addEventListener('click', () => {
        const username = usernameInput.value.trim();
        if (username && roomValue) {
          // Pass the name as URL parameter instead of using cookies
          window.location.href = `/meet/${roomValue}?name=${encodeURIComponent(username)}`;
        } else if (!username) {
          alert('Please enter your name');
        } else {
          // If somehow no room, redirect to home
          window.location.href = '/';
        }
      });

      // Allow pressing Enter in the input field
      usernameInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          joinMeetingBtn.click();
        }
      });
    }
  });

  var loggedIn = false;

  document.addEventListener('nlAuth', (e) => {
      console.log("nlauth", e);
      if (e.detail.type === 'login' || e.detail.type === 'signup') {
          if (!loggedIn) {
              console.log("Logging In");
              loggedIn = true;
              setTimeout(function() {
                  loadUser(roomValue);
              }, 200);
          }
      } else {
          if (loggedIn) {
              setTimeout(function() {
                  console.log("logoff section");
                  loggedIn = false;
                  document.dispatchEvent(new Event("nlLogout")); // logout from nostr-login
                  // Optionally clear the cookie on logout
                  document.cookie = "pubkey=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
              }, 200);
          }
      }
  });

  function setCookie(name, value, days) {
      let expires = "";
      if (days) {
          const date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          expires = "; expires=" + date.toUTCString();
      }
      document.cookie = name + "=" + (value || "") + expires + "; path=/";
  }

  function loadUser(roomValue) {
      if (window.nostr) {
          window.nostr.getPublicKey().then(function (pubkey) {
              if (pubkey) {
                  loggedIn = true;
                  console.log("fetched pubkey", pubkey);
                  // Set the pubkey as a cookie
                  setCookie("pubkey", pubkey, 7); // Store for 7 days
                  // Redirect to the meeting page
                  window.location.href = `/meet/${roomValue}`;
              }
          }).catch((err) => {
              console.log("LoadUser Err", err);
              console.log("logoff section");
              loggedIn = false;
              document.dispatchEvent(new Event("nlLogout")); // logout from nostr-login
              // Clear the cookie on error
              document.cookie = "pubkey=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
          });
      }
  }
</script>
